knitr::opts_chunk$set(echo = TRUE)
################################################################################
# I like to include several additional notes in the header of my files here:
#
# Last modified: 8/12/2022
#
### PURPOSE:
# Lecture 9 code and output file
#
### NOTES:
# - uses the Tidyverse package and Dplyr
################################################################################
### 0. Load the packages we will need for this file ####
library(tidyverse) # load the installed package for each new session of R
library(broom)
library(readxl) # Read in data
library(modelsummary) # For making regression tables
library(causaldata) # Useful toy data sets
library(here) # Helpful in working with directories and projects
library(AER) # this package has lots of applied metrics packages
library(foreign) # Helpful for reading in data from Stata or other code languages
library(zoo) # Helpful packages for organizing dates
library(fixest) # For fixed effects
set.seed(03262020)
# Setting the seed helps to make random number generators give us the same numbers across machines
################################################################################
mydata <- read.csv(here("us_state_vaccinations.csv"))
mydata$date <- as.yearmon(mydata$date)
# Trim out some "states" that we don't need
`%!in%` <- Negate(`%in%`)
mydata <- mydata %>% filter(location  %!in% c("American Samoa", "Bureau of Prisons", "Dept of Defense",
"Federated States of Micronesia", "Guam", "Indian Health Svc",
"Long Term Care", "Marshall Islands", "Northern Mariana Islands",
"Puerto Rico", "Republic of Palau", "United States", "Veterans Health",
"Virgin Islands"))
# Group to month level
mydata <- mydata %>% group_by(date, location) %>%
summarize(total_vaccinations_per_hundred = sum(total_vaccinations_per_hundred,na.rm=T),
people_vaccinated_per_hundred = sum(people_vaccinated_per_hundred,na.rm=T),
monthly_vaccinations_per_million = sum(daily_vaccinations_per_million,na.rm=T))
#Show rates of donation over time for each state
ggplot(mydata,aes(x=date,y=monthly_vaccinations_per_million,group=location)) + geom_line() +
theme_classic() + labs(x="Time",y="Monthly Vaccinations per Million")
# Look at two similar states: Ohio (vaccine lottery started June 2021) and Michigan
ggplot(mydata[which(mydata$location=="Ohio"),],aes(x=date,y=monthly_vaccinations_per_million,group=location)) + geom_line() +
theme_classic() + labs(x="Time",y="Monthly Vaccinations per Million")
ggplot(mydata[which(mydata$location=="Michigan"),],aes(x=date,y=monthly_vaccinations_per_million,group=location)) + geom_line() +
theme_classic() + labs(x="Time",y="Monthly Vaccinations per Million")
# Look at two similar states: Ohio (vaccine lottery started June 2021) and Michigan
ggplot(mydata[which(mydata$location=="Ohio"),],aes(x=date,y=monthly_vaccinations_per_million,group=location)) + geom_line() +
theme_classic() + labs(x="Time",y="Monthly Vaccinations per Million") +
geom_vline(xintercept = 'June 2021')
View(mydata)
table(mydata$date)
# Look at two similar states: Ohio (vaccine lottery started June 2021) and Michigan
ggplot(mydata[which(mydata$location=="Ohio"),],aes(x=date,y=monthly_vaccinations_per_million,group=location)) + geom_line() +
theme_classic() + labs(x="Time",y="Monthly Vaccinations per Million") +
geom_vline(xintercept = '3')
# Look at two similar states: Ohio (vaccine lottery started June 2021) and Michigan
ggplot(mydata[which(mydata$location=="Ohio"),],aes(x=date,y=monthly_vaccinations_per_million,group=location)) + geom_line() +
theme_classic() + labs(x="Time",y="Monthly Vaccinations per Million") +
geom_vline(xintercept = '2021.5')
5/12
# Look at two similar states: Ohio (vaccine lottery started June 2021) and Michigan
ggplot(mydata[which(mydata$location=="Ohio"),],aes(x=date,y=monthly_vaccinations_per_million,group=location)) + geom_line() +
theme_classic() + labs(x="Time",y="Monthly Vaccinations per Million") +
geom_vline(xintercept = '2021.4',color='red')
ggplot(mydata[which(mydata$location=="Michigan"),],aes(x=date,y=monthly_vaccinations_per_million,group=location)) + geom_line() +
theme_classic() + labs(x="Time",y="Monthly Vaccinations per Million")+
geom_vline(xintercept = '2021.4',color='red')
# Regression data -- just ohio and michigan
regdata <- mydata %>% filter(location %in% c("Michigan","Ohio"))
# Definition of key variables
regdata <- regdata %>% mutate(timegroup = ifelse(location == "Ohio",date,0))
# Statistical tests: are the two groups' trends different?
pretrend_test <- lm(monthly_vaccinations_per_million ~ date + timegroup, data=regdata)
msummary(list(pretrend_test),
vcov=c(rep("robust",1)),
stars=c('*' = .1, '**' = .05, '***' = .01)) # Interpret each coefficient here
# Definition of key variables
regdata <- regdata %>% mutate(treated = ifelse(location == "Ohio", 1, 0),
interaction = ifelse(location == "Ohio",date,0))
# Statistical tests: are the two groups' trends different?
pretrend_test <- lm(monthly_vaccinations_per_million ~ date + treated + interaction, data=regdata)
msummary(list(pretrend_test),
vcov=c(rep("robust",1)),
stars=c('*' = .1, '**' = .05, '***' = .01)) # Interpret each coefficient here
# Statistical tests: are the two groups' trends different?
pretrend_test <- lm(monthly_vaccinations_per_million ~ date + interaction, data=regdata)
msummary(list(pretrend_test),
vcov=c(rep("robust",1)),
stars=c('*' = .1, '**' = .05, '***' = .01)) # Interpret each coefficient here
##### 2. Two-way DiD ####
# Definition of key variables
regdata <- regdata %>% mutate(state = ifelse(location == "Ohio",1,0),
post = ifelse(date >= "Jun 2021",1,0),
inter = state * post)
# Main regression
did_simple <- lm(monthly_vaccinations_per_million ~ state + post + inter, data=regdata)
msummary(list("Simple DID"=did_simple),
vcov=c(rep("robust",1)),
stars=c('*' = .1, '**' = .05, '***' = .01)) # Interpret each coefficient here
# Show parallel trends when you transform the data
regdata <- regdata %>% mutate(logy = log(monthly_vaccinations_per_million))
# Graph of both over time
ggplot(data=regdata,aes(x=date,y=monthly_vaccinations_per_million,group=state,color=factor(state))) +
geom_line() + theme_classic() + labs(x="Date",y="Montly Vaccinations",color="State = Ohio") +
geom_vline(xintercept = 2021.417,size=1.5,color='red',linetype='dashed')
ggplot(data=regdata,aes(x=date,y=logy,group=state,color=factor(state))) +
geom_line() + theme_classic() + labs(x="Date",y="Montly Vaccinations",color="State = Ohio") +
geom_vline(xintercept = 2021.417,size=1.5,color='red',linetype='dashed')
# Test of trend differences in logs
pretrend_test2 <- lm(logy ~ date + timegroup, data=regdata)
msummary(list("Levels"=pretrend_test,"Logs"=pretrend_test2),
vcov=c(rep("robust",2)),
stars=c('*' = .1, '**' = .05, '***' = .01)) # May consider using log(y) anyway -- why?
# Test of trend differences in logs
pretrend_test2 <- lm(logy ~ date + interaction, data=regdata)
msummary(list("Levels"=pretrend_test,"Logs"=pretrend_test2),
vcov=c(rep("robust",2)),
stars=c('*' = .1, '**' = .05, '***' = .01)) # May consider using log(y) anyway -- why?
# Log DID
did_log <- lm(logy ~ state + post + inter, data=regdata)
msummary(list("Simple DID"=did_simple,"Log(y)"=did_log),
vcov=c(rep("robust",2)),
stars=c('*' = .1, '**' = .05, '***' = .01)) # Interpret each coefficient here
mydata <- mydata %>% mutate(state = ifelse(location == "Ohio",1,0),
post = ifelse(date >= "Jun 2021",1,0),
inter = state * post,
logy = log(monthly_vaccinations_per_million+1))
# feols clusters by the first
# fixed effect by default, no adjustment necessary
did_full <- feols(logy ~ inter | location + date,
data = mydata)
# feols clusters by the first
# fixed effect by default, no adjustment necessary
did_full <- feols(logy ~ inter | location + date,
data = mydata)
msummary(list("Simple"=did_simple,"Full"=summary(did_full)),
stars = c('*' = .1, '**' = .05, '***' = .01)) # Why is this different? What makes it more precise? What makes it less believable?
msummary(list("Simple"=did_log,"Full"=summary(did_full)),
stars = c('*' = .1, '**' = .05, '***' = .01)) # Why is this different? What makes it more precise? What makes it less believable?
# Placebo Regression: Changing Treatment Dates
placdata <- mydata %>% filter(date < "Jun 2021")
placdata <- placdata %>% mutate(newtreat = ifelse(location == "Ohio" & date >= "Mar 2021",1,0))
did_plac <- feols(logy ~ newtreat | location + date,
data = placdata)
did_plac <- feols(logy ~ newtreat | location + date,
data = placdata)
msummary(list("Simple"=did_simple,"Full"=summary(did_full),"Placebo"=summary(did_plac)),
stars = c('*' = .1, '**' = .05, '***' = .01)) # What does this tell us?
## Single treatment event
# First, construct relative time variable
regdata_dte <- mydata %>% mutate(reltime = round((as.numeric(date) - 2021.417)*12))
dte <- feols(logy ~ i(reltime, state, ref = -1) |
date + location, data = regdata_dte)
## Single treatment event
# First, construct relative time variable
regdata_dte <- mydata %>% mutate(reltime = round((as.numeric(date) - 2021.417)*12))
dte <- feols(logy ~ i(reltime, state, ref = -1) |
date + location, data = regdata_dte)
# And use coefplot() for a graph of effects
iplot(dte,ref.line=-0.2,
ref.line.par=list(col="red",lty=1,lwd=2))
dte
# And use coefplot() for a graph of effects
iplot(dte,ref.line=-0.2,
ref.line.par=list(col="red",lty=1,lwd=2))
regdata_dte <- regdata_dte %>% filter(location %in% c("Ohio", "Michigan", "Indiana", "Pennsylvania", "West Virginia", "Kentucky"))
regdata_dte <- regdata_dte %>% filter(location %in% c("Ohio", "Michigan", "Indiana", "Pennsylvania", "West Virginia", "Kentucky"))
dte2 <- feols(logy ~ i(reltime, state, ref = -1) |
date + location, data = regdata_dte)
# And use coefplot() for a graph of effects
iplot(dte2,ref.line=-0.2,
ref.line.par=list(col="red",lty=1,lwd=2))
# Now, the relative time variable will be different for different states -- not just centered around 2021.417
# Other states: May 2021: NY, MD; July 2021: MA, MI (there are others)
regdata_dte <- mydata %>% mutate(treatdate = ifelse(location %in% c("Ohio", "New York State", "Maryland"), 2021.417,
ifelse(location %in% c("Massachusetts", "Michigan"), 2021.583,NA)), # Note the treatment date doesn't matter for non-treated states
reltime = round((as.numeric(date) - treatdate)*12))
regdata_dte <- regdata_dte %>% mutate(state = ifelse(location %in% c("Ohio", "New York State", "Maryland", "Massachusetts", "Michigan"), 1, 0))
# Make sure to reassign "treated" states
dte <- feols(logy ~ i(reltime, state, ref = -1) |
date + location, data = regdata_dte)
# And use coefplot() for a graph of effects
iplot(dte,ref.line=-0.2,
ref.line.par=list(col="red",lty=1,lwd=2)) # How do we interpret this?
########## Assignment 2: Solution
# Creator: Alex Hoagland, alexander.hoagland@utoronto.ca
# Created: 7/19/2022
# Last modified: 7/19/2022
#
# PURPOSE
#   Solutions for Assignment 2
#
# NOTES:
#   - uses the Tidyverse package and Dplyr
################################################################################
##### Packages #####
#' Display name info
name <- Sys.info()
name[7]
# install.packages('tidyverse') # if needed, install the package
library(tidyverse) # call the relevant library
library(modelsummary)
library(here)
library(knitr)
library(kableExtra)
library(gtsummary)
library(foreign) # Load the data
library(vtable) # For problem 1 summary tables
library(MatchIt) # For problem 1 matching
library(AER) # For problem 2 2SLS
library(GJRM) # For problem 2bivariate probit
library(marginaleffects) # For problem 3 marginal effects
library(devtools) # For problem 3
library(MASS) # Problem 3: Easy implementation of negative binomial
library(nnet) # Problem 3: MNL model
##########
